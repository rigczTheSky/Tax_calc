unit ZaliczkaZUlga26;

interface

uses
Narzedzia;

Const
  WOLNA_KW_21 = 43.76;
  WOLNA_KW_22 = 425;
  KOSZT_WK = 300;
  KOSZT_MN = 250;
  PIT_MN = 0.17;
  PIT_W = 0.32;
  PROG_PIT_22 = 120000;
  PROG_PIT_21 = 85528;

function liczUlge26_21(podstawa, podstawaRazem, BruttoRazem, zdrDoOdliczenia: Double): Double;
function liczUlge26_22(podstawa, podstawaRazem, BruttoRazem: Double): Double;

implementation

function liczUlge26_21(podstawa, podstawaRazem, BruttoRazem, zdrDoOdliczenia: Double): Double;
var
  czesc1, część2, zaliczka: Double;
begin
  if BruttoRazem < PROG_PIT_21 then
  begin
  zaliczka:= 0
  end
  else if (BruttoRazem > PROG_PIT_21) and (PodstawaRazem < PROG_PIT_21 *2) then
  begin
  zaliczka:= round(redDoSetnych(podstawa * PIT_MN)-zdrDoOdliczenia-WOLNA_KW_21)
  end
  else if (PodstawaRazem > PROG_PIT_21 * 2) and (PodstawaRazem < PROG_PIT_21 * 2 + podstawa) then
  begin
  część2:= podstawaRazem - (PROG_PIT_21 *2);
  czesc1:= podstawa - część2;
  czesc1:= czesc1 * PIT_MN;
  część2:= część2 * PIT_W;
  zaliczka:= round(czesc1+część2-zdrDoOdliczenia-WOLNA_KW_21);
  end
  else
  begin
  zaliczka:= round(redDoSetnych(podstawa * PIT_W)-zdrDoOdliczenia);
  end;
  result:=zaliczka;
end;

function liczUlge26_22(podstawa, podstawaRazem, BruttoRazem: Double): Double;
var
  czesc1, czesc2, zaliczka: Double;
begin
  if BruttoRazem < PROG_PIT_21 then
  begin
  zaliczka:= 0
  end
  else if (BruttoRazem > PROG_PIT_21) and (PodstawaRazem < PROG_PIT_22 *2) then
  begin
  zaliczka:= round(redDoSetnych(podstawa * PIT_MN)-WOLNA_KW_22)
  end
  else if (PodstawaRazem > PROG_PIT_22 * 2) and (PodstawaRazem < PROG_PIT_22 * 2 + podstawa) then
  begin
  czesc2:= podstawaRazem - (PROG_PIT_22 *2);
  czesc1:= podstawa - czesc2;
  czesc1:= czesc1 * PIT_MN;
  czesc2:= czesc2 * PIT_W;
  zaliczka:= round(czesc1+czesc2-WOLNA_KW_22);
  end
  else
  begin
  zaliczka:= round(redDoSetnych(podstawa * PIT_W));
  end;
  result:=zaliczka;
end;

end.
