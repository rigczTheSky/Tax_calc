unit ZaliczkaBezUlgi26;

interface

uses
Narzedzia;

Const
  WOLNA_KW_21 = 43.76;
  WOLNA_KW_22 = 425;
  PIT_MN = 0.17;
  PIT_W = 0.32;
  PROG_PIT_21 = 85528;
  PROG_PIT_22 = 120000;

function liczZaliczke21(podstawa, podstawaRazem, zdrDoOdliczenia: Double): Double;
function liczZaliczke22(podstawa, podstawaRazem: Double): Double;

implementation

function liczZaliczke21(podstawa, podstawaRazem, zdrDoOdliczenia: Double): Double;
var
  czesc1, czesc2, zaliczka: Double;
begin
  if podstawaRazem < PROG_PIT_21 then
  begin
  zaliczka:=  redDoSetnych(podstawa * PIT_MN - WOLNA_KW_21);
    if (zaliczka - zdrDoOdliczenia > 0)
    then result := round(zaliczka - zdrDoOdliczenia)
    else result := 0;
  end
  else if (podstawaRazem - podstawa < PROG_PIT_21) AND (podstawaRazem > PROG_PIT_21)
  then
  begin
    czesc1 := PROG_PIT_21 - (podstawaRazem - podstawa);
    czesc1 := czesc1 * PIT_MN;
    czesc2 := (podstawaRazem - PROG_PIT_21) * PIT_W;
    result := round(redDoSetnych(czesc1 + czesc2 - WOLNA_KW_21) - zdrDoOdliczenia);
  end
  else
    result := round(redDoSetnych(podstawa * PIT_W) - zdrDoOdliczenia);
end;

function liczZaliczke22(podstawa, podstawaRazem: Double): Double;
var
  czesc1, czêœæ2, zaliczka: Double;
begin
  if podstawaRazem < PROG_PIT_22 then
  begin
    zaliczka := round(podstawa * PIT_MN - WOLNA_KW_22);
    if (zaliczka > 0) then
      result := zaliczka
    else
      result := 0;
  end
  else if (podstawaRazem - podstawa < PROG_PIT_22) AND (podstawaRazem > PROG_PIT_22)
  then
  begin
    czesc1 := PROG_PIT_22 - (podstawaRazem - podstawa);
    czesc1 := czesc1 * PIT_MN;
    czêœæ2 := (podstawaRazem - PROG_PIT_22) * PIT_W;
    result := round(czesc1 + czêœæ2 - WOLNA_KW_22)
  end
  else
    result := round(podstawa * PIT_W - WOLNA_KW_22);
end;

end.
